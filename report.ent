\@doanenote {1}
macro:->This
was
meant
to
be
5
seconds
as
well,
but
we
made
an
arithmetic
error
trying
to
divide
the
time
spent
on
the
page
into
thirds.
\@endanenote 
\@doanenote {2}
macro:->Trying
to
access
the
database
straight
from
our
PhantomJS
script
proved
difficult,
given
the
amount
of
data
that
was
being
produced
so
quickly,
the
system
call
overhead,
on
top
of
the
large
amounts
of
memory
being
used.
\@endanenote 
\@doanenote {3}
macro:->This
would
not
have
been
an
issue
if
we
had
let
the
page
sit
for
more
time
before
triggering
the
mouse
and
keyboard
events,
but
by
the
time
we
realized
this
was
an
issue,
it
was
too
late
to
re-run
the
crawl.
It's
likely
we
also
have
a
lot
of
false
negatives
because
of
this,
and
perhaps
this
part
of
the
heuristic
could
be
refined
more.
\@endanenote 
